<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator><link href="http://127.0.0.1:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://127.0.0.1:4000/" rel="alternate" type="text/html" /><updated>2016-04-17T01:45:53+08:00</updated><id>http://127.0.0.1:4000/</id><title>Jack Zhang</title><entry><title>iOS Dev Pit Records</title><link href="http://127.0.0.1:4000/iOS-Dev-Pit-Records/" rel="alternate" type="text/html" title="iOS Dev Pit Records" /><published>2016-03-29T03:00:00+08:00</published><updated>2016-03-29T03:00:00+08:00</updated><id>http://127.0.0.1:4000/iOS-Dev-Pit-Records</id><content type="html" xml:base="http://127.0.0.1:4000/iOS-Dev-Pit-Records/">&lt;h1 id=&quot;ios-dev-pit-records&quot;&gt;iOS Dev Pit Records&lt;/h1&gt;

&lt;h2 id=&quot;how-to-add-usrlocalbin-in-path-on-mac&quot;&gt;1. How to add /usr/local/bin in $PATH on Mac&lt;/h2&gt;

&lt;p&gt;cd to &lt;code class=&quot;highlighter-rouge&quot;&gt;../etc/&lt;/code&gt;, then use &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; to make sure your &lt;code class=&quot;highlighter-rouge&quot;&gt;paths&lt;/code&gt; file is in, vim &lt;code class=&quot;highlighter-rouge&quot;&gt;paths&lt;/code&gt;, add &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt; at the end of the file.&lt;/p&gt;</content><category term="iOS" /><summary>iOS Dev Pit Records</summary></entry><entry><title>iOS AppIcon Size</title><link href="http://127.0.0.1:4000/iOS-AppIcon-Size-Summary/" rel="alternate" type="text/html" title="iOS AppIcon Size" /><published>2016-03-23T03:00:00+08:00</published><updated>2016-03-23T03:00:00+08:00</updated><id>http://127.0.0.1:4000/iOS-AppIcon-Size-Summary</id><content type="html" xml:base="http://127.0.0.1:4000/iOS-AppIcon-Size-Summary/">&lt;h1 id=&quot;ios-appicon-size&quot;&gt;iOS AppIcon Size&lt;/h1&gt;

&lt;h2 id=&quot;iphone-appicon&quot;&gt;iPhone AppIcon&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;iPhone Spotlight - iOS 5,6: 58px@2x, 87px@3x&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;iPhone Spotlight - iOS 7,8,9: 80px@2x, 120px@3x&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;iPhone Settings - iOS 5,6,7,8,9: 58px@2x, 87px@3x&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;iPhone App - iOS 7,8,9: 120px@2x, 180px@3x&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ipad-appicon&quot;&gt;iPad AppIcon&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;iPad Settings - iOS 5,6,7,8,9: 29px@1x, 58px@2x&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;iPad Spotlight - iOS 7,8,9: 40px@1x, 80px@2x&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;iPad App - iOS 76px@1x, 152px@2x&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;iPad Pro App - iOS9: 167px@2x&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;common&quot;&gt;Common&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;ItunesConnect: 1024px&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;iPhone: 58px, 80px, 87px, 120px, 180px
iPad:29px, 40px, 58px, 76px, 80px, 152px, 167px
itunesConnect: 1024px&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remark: 1pt = 2px&lt;/strong&gt;&lt;/p&gt;</content><category term="iOS" /><summary>iOS AppIcon Size</summary></entry><entry><title>Xcode Plugins</title><link href="http://127.0.0.1:4000/Xcode-Plugins/" rel="alternate" type="text/html" title="Xcode Plugins" /><published>2016-03-23T03:00:00+08:00</published><updated>2016-03-23T03:00:00+08:00</updated><id>http://127.0.0.1:4000/Xcode-Plugins</id><content type="html" xml:base="http://127.0.0.1:4000/Xcode-Plugins/">&lt;h1 id=&quot;xcode-plugins&quot;&gt;Xcode Plugins&lt;/h1&gt;

&lt;h2 id=&quot;package-manager--alcatraz&quot;&gt;Package Manager —— &lt;code class=&quot;highlighter-rouge&quot;&gt;Alcatraz&lt;/code&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Install, Paste this into your terminal:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;curl -fsSL https://raw.githubusercontent.com/supermarin/Alcatraz/deploy/Scripts/install.sh | sh&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Uninstall, Delete the plugin:
&lt;code class=&quot;highlighter-rouge&quot;&gt;rm -rf ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins/Alcatraz.xcplugin&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Remove all cached data:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;rm -rf ~/Library/Application\ Support/Alcatraz&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;plugin-list&quot;&gt;Plugin List&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;KSImageNamed&lt;/code&gt;&lt;br /&gt;
Xcode plug-in that provides autocomplete for imageNamed: calls.&lt;br /&gt;
&amp;gt; https://github.com/ksuther/KSImageNamed-Xcode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FuzzyAutocomplete&lt;/code&gt;&lt;br /&gt;
A Xcode 5+ plugin that adds more flexible autocompletion rather than just prefix-matching.&lt;br /&gt;
&amp;gt; https://github.com/FuzzyAutocomplete/FuzzyAutocompletePlugin&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;XToDo&lt;/code&gt;&lt;br /&gt;
Xcode plugin to collect and list the &lt;code class=&quot;highlighter-rouge&quot;&gt;TODO&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;FIXME&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;???&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;!!!!&lt;/code&gt;&lt;br /&gt;
&amp;gt; https://github.com/trawor/XToDo&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SCXcodeSwitchExpander&lt;/code&gt;&lt;br /&gt;
Xcode plugin that enables switch cases autocompletion.&lt;br /&gt;
&amp;gt; https://github.com/stefanceriu/SCXcodeSwitchExpander&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;deriveddata-exterminator&lt;/code&gt;&lt;br /&gt;
A magic button in Xcode to exterminate the current project’s DerivedData directories.&lt;br /&gt;
&amp;gt; https://github.com/kattrali/deriveddata-exterminator&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VVDocumenter&lt;/code&gt;&lt;br /&gt;
Xcode plug-in which helps you write documentation comment easier, for both Objective-C and Swift.&lt;br /&gt;
&amp;gt; https://github.com/onevcat/VVDocumenter-Xcode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ClangFormat&lt;/code&gt;&lt;br /&gt;
Xcode plug-in to to use clang-format from in Xcode and consistently format your code with Clang.&lt;br /&gt;
&amp;gt; https://github.com/travisjeffery/ClangFormat-Xcode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ColorSense&lt;/code&gt;&lt;br /&gt;
Plugin for Xcode to make working with colors more visual.&lt;br /&gt;
&amp;gt; https://github.com/omz/ColorSense-for-Xcode&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><category term="iOS" /><category term="Xcode" /><summary>Xcode Plugins</summary></entry><entry><title>UIFont FamilyNames FontNames</title><link href="http://127.0.0.1:4000/UIFont-FamilyNames-FontNames/" rel="alternate" type="text/html" title="UIFont FamilyNames FontNames" /><published>2016-03-23T03:00:00+08:00</published><updated>2016-03-23T03:00:00+08:00</updated><id>http://127.0.0.1:4000/UIFont-FamilyNames-FontNames</id><content type="html" xml:base="http://127.0.0.1:4000/UIFont-FamilyNames-FontNames/">&lt;h1 id=&quot;uifont-familynames-fontnames&quot;&gt;UIFont FamilyNames FontNames&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for (NSString *fontFamilyName in [UIFont familyNames]){
	NSLog(@&quot;familyName:&#39;%@&#39;&quot;,fontFamilyName);
	for(NSString *fontName in [UIFont fontNamesForFamilyName:fontFamilyName])
	{
		NSLog(@&quot;fontName:&#39;%@&#39;&quot;,fontName);
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;注：字体遍历结果如下：&lt;/em&gt;&lt;/strong&gt;
»
2016-03-22 12:54:06.726 HTMF[3376:147526] familyName:’Copperplate’
2016-03-22 12:54:06.727 HTMF[3376:147526] fontName:’Copperplate-Light’
2016-03-22 12:54:06.727 HTMF[3376:147526] fontName:’Copperplate’
2016-03-22 12:54:06.727 HTMF[3376:147526] fontName:’Copperplate-Bold’
2016-03-22 12:54:06.727 HTMF[3376:147526] familyName:’Heiti SC’
2016-03-22 12:54:06.727 HTMF[3376:147526] familyName:’Iowan Old Style’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’IowanOldStyle-Italic’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’IowanOldStyle-Roman’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’IowanOldStyle-BoldItalic’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’IowanOldStyle-Bold’
2016-03-22 12:54:06.728 HTMF[3376:147526] familyName:’Kohinoor Telugu’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’KohinoorTelugu-Regular’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’KohinoorTelugu-Medium’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’KohinoorTelugu-Light’
2016-03-22 12:54:06.728 HTMF[3376:147526] familyName:’Thonburi’
2016-03-22 12:54:06.728 HTMF[3376:147526] fontName:’Thonburi’
2016-03-22 12:54:06.729 HTMF[3376:147526] fontName:’Thonburi-Bold’
2016-03-22 12:54:06.729 HTMF[3376:147526] fontName:’Thonburi-Light’
2016-03-22 12:54:06.729 HTMF[3376:147526] familyName:’Heiti TC’
2016-03-22 12:54:06.730 HTMF[3376:147526] familyName:’Courier New’
2016-03-22 12:54:06.730 HTMF[3376:147526] fontName:’CourierNewPS-BoldMT’
2016-03-22 12:54:06.730 HTMF[3376:147526] fontName:’CourierNewPS-ItalicMT’
2016-03-22 12:54:06.730 HTMF[3376:147526] fontName:’CourierNewPSMT’
2016-03-22 12:54:06.730 HTMF[3376:147526] fontName:’CourierNewPS-BoldItalicMT’
2016-03-22 12:54:06.730 HTMF[3376:147526] familyName:’Gill Sans’
2016-03-22 12:54:06.730 HTMF[3376:147526] fontName:’GillSans-Italic’
2016-03-22 12:54:06.730 HTMF[3376:147526] fontName:’GillSans-Bold’
2016-03-22 12:54:06.731 HTMF[3376:147526] fontName:’GillSans-BoldItalic’
2016-03-22 12:54:06.731 HTMF[3376:147526] fontName:’GillSans-LightItalic’
2016-03-22 12:54:06.731 HTMF[3376:147526] fontName:’GillSans’
2016-03-22 12:54:06.731 HTMF[3376:147526] fontName:’GillSans-Light’
2016-03-22 12:54:06.731 HTMF[3376:147526] fontName:’GillSans-SemiBold’
2016-03-22 12:54:06.731 HTMF[3376:147526] fontName:’GillSans-SemiBoldItalic’
2016-03-22 12:54:06.731 HTMF[3376:147526] fontName:’GillSans-UltraBold’
2016-03-22 12:54:06.731 HTMF[3376:147526] familyName:’Apple SD Gothic Neo’
2016-03-22 12:54:06.732 HTMF[3376:147526] fontName:’AppleSDGothicNeo-Bold’
2016-03-22 12:54:06.732 HTMF[3376:147526] fontName:’AppleSDGothicNeo-Thin’
2016-03-22 12:54:06.732 HTMF[3376:147526] fontName:’AppleSDGothicNeo-UltraLight’
2016-03-22 12:54:06.732 HTMF[3376:147526] fontName:’AppleSDGothicNeo-Regular’
2016-03-22 12:54:06.732 HTMF[3376:147526] fontName:’AppleSDGothicNeo-Light’
2016-03-22 12:54:06.732 HTMF[3376:147526] fontName:’AppleSDGothicNeo-Medium’
2016-03-22 12:54:06.732 HTMF[3376:147526] fontName:’AppleSDGothicNeo-SemiBold’
2016-03-22 12:54:06.732 HTMF[3376:147526] familyName:’Marker Felt’
2016-03-22 12:54:06.733 HTMF[3376:147526] fontName:’MarkerFelt-Thin’
2016-03-22 12:54:06.733 HTMF[3376:147526] fontName:’MarkerFelt-Wide’
2016-03-22 12:54:06.733 HTMF[3376:147526] familyName:’Avenir Next Condensed’
2016-03-22 12:54:06.733 HTMF[3376:147526] fontName:’AvenirNextCondensed-BoldItalic’
2016-03-22 12:54:06.733 HTMF[3376:147526] fontName:’AvenirNextCondensed-Heavy’
2016-03-22 12:54:06.733 HTMF[3376:147526] fontName:’AvenirNextCondensed-Medium’
2016-03-22 12:54:06.733 HTMF[3376:147526] fontName:’AvenirNextCondensed-Regular’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-HeavyItalic’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-MediumItalic’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-Italic’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-UltraLightItalic’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-UltraLight’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-DemiBold’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-Bold’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’AvenirNextCondensed-DemiBoldItalic’
2016-03-22 12:54:06.734 HTMF[3376:147526] familyName:’Tamil Sangam MN’
2016-03-22 12:54:06.734 HTMF[3376:147526] fontName:’TamilSangamMN’
2016-03-22 12:54:06.735 HTMF[3376:147526] fontName:’TamilSangamMN-Bold’
2016-03-22 12:54:06.735 HTMF[3376:147526] familyName:’Helvetica Neue’
2016-03-22 12:54:06.735 HTMF[3376:147526] fontName:’HelveticaNeue-Italic’
2016-03-22 12:54:06.735 HTMF[3376:147526] fontName:’HelveticaNeue-Bold’
2016-03-22 12:54:06.735 HTMF[3376:147526] fontName:’HelveticaNeue-UltraLight’
2016-03-22 12:54:06.735 HTMF[3376:147526] fontName:’HelveticaNeue-CondensedBlack’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-BoldItalic’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-CondensedBold’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-Medium’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-Light’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-Thin’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-ThinItalic’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-LightItalic’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-UltraLightItalic’
2016-03-22 12:54:06.736 HTMF[3376:147526] fontName:’HelveticaNeue-MediumItalic’
2016-03-22 12:54:06.737 HTMF[3376:147526] fontName:’HelveticaNeue’
2016-03-22 12:54:06.737 HTMF[3376:147526] familyName:’Gurmukhi MN’
2016-03-22 12:54:06.737 HTMF[3376:147526] fontName:’GurmukhiMN-Bold’
2016-03-22 12:54:06.737 HTMF[3376:147526] fontName:’GurmukhiMN’
2016-03-22 12:54:06.737 HTMF[3376:147526] familyName:’Times New Roman’
2016-03-22 12:54:06.737 HTMF[3376:147526] fontName:’TimesNewRomanPSMT’
2016-03-22 12:54:06.737 HTMF[3376:147526] fontName:’TimesNewRomanPS-BoldItalicMT’
2016-03-22 12:54:06.737 HTMF[3376:147526] fontName:’TimesNewRomanPS-ItalicMT’
2016-03-22 12:54:06.737 HTMF[3376:147526] fontName:’TimesNewRomanPS-BoldMT’
2016-03-22 12:54:06.738 HTMF[3376:147526] familyName:’Georgia’
2016-03-22 12:54:06.738 HTMF[3376:147526] fontName:’Georgia-BoldItalic’
2016-03-22 12:54:06.738 HTMF[3376:147526] fontName:’Georgia’
2016-03-22 12:54:06.738 HTMF[3376:147526] fontName:’Georgia-Italic’
2016-03-22 12:54:06.738 HTMF[3376:147526] fontName:’Georgia-Bold’
2016-03-22 12:54:06.738 HTMF[3376:147526] familyName:’Apple Color Emoji’
2016-03-22 12:54:06.738 HTMF[3376:147526] fontName:’AppleColorEmoji’
2016-03-22 12:54:06.738 HTMF[3376:147526] familyName:’Arial Rounded MT Bold’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’ArialRoundedMTBold’
2016-03-22 12:54:06.739 HTMF[3376:147526] familyName:’Kailasa’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’Kailasa-Bold’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’Kailasa’
2016-03-22 12:54:06.739 HTMF[3376:147526] familyName:’Kohinoor Devanagari’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’KohinoorDevanagari-Light’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’KohinoorDevanagari-Regular’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’KohinoorDevanagari-Semibold’
2016-03-22 12:54:06.739 HTMF[3376:147526] familyName:’Kohinoor Bangla’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’KohinoorBangla-Semibold’
2016-03-22 12:54:06.739 HTMF[3376:147526] fontName:’KohinoorBangla-Regular’
2016-03-22 12:54:06.740 HTMF[3376:147526] fontName:’KohinoorBangla-Light’
2016-03-22 12:54:06.740 HTMF[3376:147526] familyName:’Chalkboard SE’
2016-03-22 12:54:06.740 HTMF[3376:147526] fontName:’ChalkboardSE-Bold’
2016-03-22 12:54:06.740 HTMF[3376:147526] fontName:’ChalkboardSE-Light’
2016-03-22 12:54:06.740 HTMF[3376:147526] fontName:’ChalkboardSE-Regular’
2016-03-22 12:54:06.740 HTMF[3376:147526] familyName:’Sinhala Sangam MN’
2016-03-22 12:54:06.740 HTMF[3376:147526] fontName:’SinhalaSangamMN-Bold’
2016-03-22 12:54:06.741 HTMF[3376:147526] fontName:’SinhalaSangamMN’
2016-03-22 12:54:06.741 HTMF[3376:147526] familyName:’PingFang TC’
2016-03-22 12:54:06.741 HTMF[3376:147526] fontName:’PingFangTC-Medium’
2016-03-22 12:54:06.741 HTMF[3376:147526] fontName:’PingFangTC-Regular’
2016-03-22 12:54:06.741 HTMF[3376:147526] fontName:’PingFangTC-Light’
2016-03-22 12:54:06.741 HTMF[3376:147526] fontName:’PingFangTC-Ultralight’
2016-03-22 12:54:06.741 HTMF[3376:147526] fontName:’PingFangTC-Semibold’
2016-03-22 12:54:06.741 HTMF[3376:147526] fontName:’PingFangTC-Thin’
2016-03-22 12:54:06.741 HTMF[3376:147526] familyName:’Gujarati Sangam MN’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’GujaratiSangamMN-Bold’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’GujaratiSangamMN’
2016-03-22 12:54:06.742 HTMF[3376:147526] familyName:’Damascus’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’DamascusLight’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’DamascusBold’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’DamascusSemiBold’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’DamascusMedium’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’Damascus’
2016-03-22 12:54:06.742 HTMF[3376:147526] familyName:’Noteworthy’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’Noteworthy-Light’
2016-03-22 12:54:06.742 HTMF[3376:147526] fontName:’Noteworthy-Bold’
2016-03-22 12:54:06.743 HTMF[3376:147526] familyName:’Geeza Pro’
2016-03-22 12:54:06.743 HTMF[3376:147526] fontName:’GeezaPro’
2016-03-22 12:54:06.743 HTMF[3376:147526] fontName:’GeezaPro-Bold’
2016-03-22 12:54:06.743 HTMF[3376:147526] familyName:’Avenir’
2016-03-22 12:54:06.743 HTMF[3376:147526] fontName:’Avenir-Medium’
2016-03-22 12:54:06.743 HTMF[3376:147526] fontName:’Avenir-HeavyOblique’
2016-03-22 12:54:06.743 HTMF[3376:147526] fontName:’Avenir-Book’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-Light’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-Roman’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-BookOblique’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-Black’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-MediumOblique’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-BlackOblique’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-Heavy’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-LightOblique’
2016-03-22 12:54:06.744 HTMF[3376:147526] fontName:’Avenir-Oblique’
2016-03-22 12:54:06.745 HTMF[3376:147526] familyName:’Academy Engraved LET’
2016-03-22 12:54:06.745 HTMF[3376:147526] fontName:’AcademyEngravedLetPlain’
2016-03-22 12:54:06.745 HTMF[3376:147526] familyName:’Mishafi’
2016-03-22 12:54:06.745 HTMF[3376:147526] fontName:’DiwanMishafi’
2016-03-22 12:54:06.745 HTMF[3376:147526] familyName:’Futura’
2016-03-22 12:54:06.745 HTMF[3376:147526] fontName:’Futura-CondensedMedium’
2016-03-22 12:54:06.745 HTMF[3376:147526] fontName:’Futura-CondensedExtraBold’
2016-03-22 12:54:06.745 HTMF[3376:147526] fontName:’Futura-Medium’
2016-03-22 12:54:06.745 HTMF[3376:147526] fontName:’Futura-MediumItalic’
2016-03-22 12:54:06.746 HTMF[3376:147526] familyName:’Farah’
2016-03-22 12:54:06.746 HTMF[3376:147526] fontName:’Farah’
2016-03-22 12:54:06.746 HTMF[3376:147526] familyName:’Kannada Sangam MN’
2016-03-22 12:54:06.746 HTMF[3376:147526] fontName:’KannadaSangamMN’
2016-03-22 12:54:06.746 HTMF[3376:147526] fontName:’KannadaSangamMN-Bold’
2016-03-22 12:54:06.746 HTMF[3376:147526] familyName:’Arial Hebrew’
2016-03-22 12:54:06.746 HTMF[3376:147526] fontName:’ArialHebrew-Bold’
2016-03-22 12:54:06.747 HTMF[3376:147526] fontName:’ArialHebrew-Light’
2016-03-22 12:54:06.747 HTMF[3376:147526] fontName:’ArialHebrew’
2016-03-22 12:54:06.747 HTMF[3376:147526] familyName:’Arial’
2016-03-22 12:54:06.747 HTMF[3376:147526] fontName:’ArialMT’
2016-03-22 12:54:06.747 HTMF[3376:147526] fontName:’Arial-BoldItalicMT’
2016-03-22 12:54:06.747 HTMF[3376:147526] fontName:’Arial-BoldMT’
2016-03-22 12:54:06.747 HTMF[3376:147526] fontName:’Arial-ItalicMT’
2016-03-22 12:54:06.747 HTMF[3376:147526] familyName:’Party LET’
2016-03-22 12:54:06.747 HTMF[3376:147526] fontName:’PartyLetPlain’
2016-03-22 12:54:06.748 HTMF[3376:147526] familyName:’Chalkduster’
2016-03-22 12:54:06.748 HTMF[3376:147526] fontName:’Chalkduster’
2016-03-22 12:54:06.748 HTMF[3376:147526] familyName:’Hoefler Text’
2016-03-22 12:54:06.748 HTMF[3376:147526] fontName:’HoeflerText-Italic’
2016-03-22 12:54:06.748 HTMF[3376:147526] fontName:’HoeflerText-Regular’
2016-03-22 12:54:06.748 HTMF[3376:147526] fontName:’HoeflerText-Black’
2016-03-22 12:54:06.748 HTMF[3376:147526] fontName:’HoeflerText-BlackItalic’
2016-03-22 12:54:06.749 HTMF[3376:147526] familyName:’Optima’
2016-03-22 12:54:06.749 HTMF[3376:147526] fontName:’Optima-Regular’
2016-03-22 12:54:06.749 HTMF[3376:147526] fontName:’Optima-ExtraBlack’
2016-03-22 12:54:06.749 HTMF[3376:147526] fontName:’Optima-BoldItalic’
2016-03-22 12:54:06.749 HTMF[3376:147526] fontName:’Optima-Italic’
2016-03-22 12:54:06.749 HTMF[3376:147526] fontName:’Optima-Bold’
2016-03-22 12:54:06.750 HTMF[3376:147526] familyName:’Palatino’
2016-03-22 12:54:06.750 HTMF[3376:147526] fontName:’Palatino-Bold’
2016-03-22 12:54:06.750 HTMF[3376:147526] fontName:’Palatino-Roman’
2016-03-22 12:54:06.750 HTMF[3376:147526] fontName:’Palatino-BoldItalic’
2016-03-22 12:54:06.750 HTMF[3376:147526] fontName:’Palatino-Italic’
2016-03-22 12:54:06.750 HTMF[3376:147526] familyName:’Lao Sangam MN’
2016-03-22 12:54:06.751 HTMF[3376:147526] fontName:’LaoSangamMN’
2016-03-22 12:54:06.751 HTMF[3376:147526] familyName:’Malayalam Sangam MN’
2016-03-22 12:54:06.751 HTMF[3376:147526] fontName:’MalayalamSangamMN-Bold’
2016-03-22 12:54:06.751 HTMF[3376:147526] fontName:’MalayalamSangamMN’
2016-03-22 12:54:06.751 HTMF[3376:147526] familyName:’Al Nile’
2016-03-22 12:54:06.751 HTMF[3376:147526] fontName:’AlNile-Bold’
2016-03-22 12:54:06.751 HTMF[3376:147526] fontName:’AlNile’
2016-03-22 12:54:06.751 HTMF[3376:147526] familyName:’Bradley Hand’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’BradleyHandITCTT-Bold’
2016-03-22 12:54:06.752 HTMF[3376:147526] familyName:’PingFang HK’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’PingFangHK-Ultralight’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’PingFangHK-Semibold’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’PingFangHK-Thin’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’PingFangHK-Light’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’PingFangHK-Regular’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’PingFangHK-Medium’
2016-03-22 12:54:06.752 HTMF[3376:147526] familyName:’Trebuchet MS’
2016-03-22 12:54:06.752 HTMF[3376:147526] fontName:’Trebuchet-BoldItalic’
2016-03-22 12:54:06.753 HTMF[3376:147526] fontName:’TrebuchetMS’
2016-03-22 12:54:06.753 HTMF[3376:147526] fontName:’TrebuchetMS-Bold’
2016-03-22 12:54:06.753 HTMF[3376:147526] fontName:’TrebuchetMS-Italic’
2016-03-22 12:54:06.753 HTMF[3376:147526] familyName:’Helvetica’
2016-03-22 12:54:06.753 HTMF[3376:147526] fontName:’Helvetica-Bold’
2016-03-22 12:54:06.753 HTMF[3376:147526] fontName:’Helvetica’
2016-03-22 12:54:06.753 HTMF[3376:147526] fontName:’Helvetica-LightOblique’
2016-03-22 12:54:06.754 HTMF[3376:147526] fontName:’Helvetica-Oblique’
2016-03-22 12:54:06.754 HTMF[3376:147526] fontName:’Helvetica-BoldOblique’
2016-03-22 12:54:06.754 HTMF[3376:147526] fontName:’Helvetica-Light’
2016-03-22 12:54:06.754 HTMF[3376:147526] familyName:’Courier’
2016-03-22 12:54:06.754 HTMF[3376:147526] fontName:’Courier-BoldOblique’
2016-03-22 12:54:06.754 HTMF[3376:147526] fontName:’Courier’
2016-03-22 12:54:06.754 HTMF[3376:147526] fontName:’Courier-Bold’
2016-03-22 12:54:06.754 HTMF[3376:147526] fontName:’Courier-Oblique’
2016-03-22 12:54:06.755 HTMF[3376:147526] familyName:’Cochin’
2016-03-22 12:54:06.755 HTMF[3376:147526] fontName:’Cochin-Bold’
2016-03-22 12:54:06.755 HTMF[3376:147526] fontName:’Cochin’
2016-03-22 12:54:06.755 HTMF[3376:147526] fontName:’Cochin-Italic’
2016-03-22 12:54:06.755 HTMF[3376:147526] fontName:’Cochin-BoldItalic’
2016-03-22 12:54:06.755 HTMF[3376:147526] familyName:’Hiragino Mincho ProN’
2016-03-22 12:54:06.755 HTMF[3376:147526] fontName:’HiraMinProN-W6’
2016-03-22 12:54:06.755 HTMF[3376:147526] fontName:’HiraMinProN-W3’
2016-03-22 12:54:06.756 HTMF[3376:147526] familyName:’Devanagari Sangam MN’
2016-03-22 12:54:06.756 HTMF[3376:147526] fontName:’DevanagariSangamMN’
2016-03-22 12:54:06.756 HTMF[3376:147526] fontName:’DevanagariSangamMN-Bold’
2016-03-22 12:54:06.756 HTMF[3376:147526] familyName:’Oriya Sangam MN’
2016-03-22 12:54:06.756 HTMF[3376:147526] fontName:’OriyaSangamMN’
2016-03-22 12:54:06.756 HTMF[3376:147526] fontName:’OriyaSangamMN-Bold’
2016-03-22 12:54:06.756 HTMF[3376:147526] familyName:’Snell Roundhand’
2016-03-22 12:54:06.756 HTMF[3376:147526] fontName:’SnellRoundhand-Bold’
2016-03-22 12:54:06.757 HTMF[3376:147526] fontName:’SnellRoundhand’
2016-03-22 12:54:06.757 HTMF[3376:147526] fontName:’SnellRoundhand-Black’
2016-03-22 12:54:06.757 HTMF[3376:147526] familyName:’Zapf Dingbats’
2016-03-22 12:54:06.757 HTMF[3376:147526] fontName:’ZapfDingbatsITC’
2016-03-22 12:54:06.757 HTMF[3376:147526] familyName:’Bodoni 72’
2016-03-22 12:54:06.757 HTMF[3376:147526] fontName:’BodoniSvtyTwoITCTT-Bold’
2016-03-22 12:54:06.757 HTMF[3376:147526] fontName:’BodoniSvtyTwoITCTT-Book’
2016-03-22 12:54:06.757 HTMF[3376:147526] fontName:’BodoniSvtyTwoITCTT-BookIta’
2016-03-22 12:54:06.758 HTMF[3376:147526] familyName:’Verdana’
2016-03-22 12:54:06.758 HTMF[3376:147526] fontName:’Verdana-Italic’
2016-03-22 12:54:06.758 HTMF[3376:147526] fontName:’Verdana-BoldItalic’
2016-03-22 12:54:06.758 HTMF[3376:147526] fontName:’Verdana’
2016-03-22 12:54:06.758 HTMF[3376:147526] fontName:’Verdana-Bold’
2016-03-22 12:54:06.758 HTMF[3376:147526] familyName:’American Typewriter’
2016-03-22 12:54:06.758 HTMF[3376:147526] fontName:’AmericanTypewriter-CondensedLight’
2016-03-22 12:54:06.758 HTMF[3376:147526] fontName:’AmericanTypewriter’
2016-03-22 12:54:06.758 HTMF[3376:147526] fontName:’AmericanTypewriter-CondensedBold’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AmericanTypewriter-Light’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AmericanTypewriter-Bold’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AmericanTypewriter-Condensed’
2016-03-22 12:54:06.759 HTMF[3376:147526] familyName:’Avenir Next’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AvenirNext-UltraLight’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AvenirNext-UltraLightItalic’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AvenirNext-Bold’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AvenirNext-BoldItalic’
2016-03-22 12:54:06.759 HTMF[3376:147526] fontName:’AvenirNext-DemiBold’
2016-03-22 12:54:06.760 HTMF[3376:147526] fontName:’AvenirNext-DemiBoldItalic’
2016-03-22 12:54:06.760 HTMF[3376:147526] fontName:’AvenirNext-Medium’
2016-03-22 12:54:06.760 HTMF[3376:147526] fontName:’AvenirNext-HeavyItalic’
2016-03-22 12:54:06.760 HTMF[3376:147526] fontName:’AvenirNext-Heavy’
2016-03-22 12:54:06.760 HTMF[3376:147526] fontName:’AvenirNext-Italic’
2016-03-22 12:54:06.760 HTMF[3376:147526] fontName:’AvenirNext-Regular’
2016-03-22 12:54:06.760 HTMF[3376:147526] fontName:’AvenirNext-MediumItalic’
2016-03-22 12:54:06.760 HTMF[3376:147526] familyName:’Baskerville’
2016-03-22 12:54:06.761 HTMF[3376:147526] fontName:’Baskerville-Italic’
2016-03-22 12:54:06.761 HTMF[3376:147526] fontName:’Baskerville-SemiBold’
2016-03-22 12:54:06.761 HTMF[3376:147526] fontName:’Baskerville-BoldItalic’
2016-03-22 12:54:06.761 HTMF[3376:147526] fontName:’Baskerville-SemiBoldItalic’
2016-03-22 12:54:06.761 HTMF[3376:147526] fontName:’Baskerville-Bold’
2016-03-22 12:54:06.761 HTMF[3376:147526] fontName:’Baskerville’
2016-03-22 12:54:06.761 HTMF[3376:147526] familyName:’Khmer Sangam MN’
2016-03-22 12:54:06.761 HTMF[3376:147526] fontName:’KhmerSangamMN’
2016-03-22 12:54:06.761 HTMF[3376:147526] familyName:’Didot’
2016-03-22 12:54:06.762 HTMF[3376:147526] fontName:’Didot-Italic’
2016-03-22 12:54:06.762 HTMF[3376:147526] fontName:’Didot-Bold’
2016-03-22 12:54:06.762 HTMF[3376:147526] fontName:’Didot’
2016-03-22 12:54:06.762 HTMF[3376:147526] familyName:’Savoye LET’
2016-03-22 12:54:06.762 HTMF[3376:147526] fontName:’SavoyeLetPlain’
2016-03-22 12:54:06.762 HTMF[3376:147526] familyName:’Bodoni Ornaments’
2016-03-22 12:54:06.762 HTMF[3376:147526] fontName:’BodoniOrnamentsITCTT’
2016-03-22 12:54:06.763 HTMF[3376:147526] familyName:’Symbol’
2016-03-22 12:54:06.763 HTMF[3376:147526] fontName:’Symbol’
2016-03-22 12:54:06.763 HTMF[3376:147526] familyName:’Menlo’
2016-03-22 12:54:06.763 HTMF[3376:147526] fontName:’Menlo-Italic’
2016-03-22 12:54:06.763 HTMF[3376:147526] fontName:’Menlo-Bold’
2016-03-22 12:54:06.763 HTMF[3376:147526] fontName:’Menlo-Regular’
2016-03-22 12:54:06.763 HTMF[3376:147526] fontName:’Menlo-BoldItalic’
2016-03-22 12:54:06.763 HTMF[3376:147526] familyName:’Bodoni 72 Smallcaps’
2016-03-22 12:54:06.764 HTMF[3376:147526] fontName:’BodoniSvtyTwoSCITCTT-Book’
2016-03-22 12:54:06.764 HTMF[3376:147526] familyName:’Papyrus’
2016-03-22 12:54:06.764 HTMF[3376:147526] fontName:’Papyrus’
2016-03-22 12:54:06.764 HTMF[3376:147526] fontName:’Papyrus-Condensed’
2016-03-22 12:54:06.764 HTMF[3376:147526] familyName:’Hiragino Sans’
2016-03-22 12:54:06.764 HTMF[3376:147526] fontName:’HiraginoSans-W3’
2016-03-22 12:54:06.764 HTMF[3376:147526] fontName:’HiraginoSans-W6’
2016-03-22 12:54:06.764 HTMF[3376:147526] familyName:’PingFang SC’
2016-03-22 12:54:06.765 HTMF[3376:147526] fontName:’PingFangSC-Ultralight’
2016-03-22 12:54:06.765 HTMF[3376:147526] fontName:’PingFangSC-Regular’
2016-03-22 12:54:06.765 HTMF[3376:147526] fontName:’PingFangSC-Semibold’
2016-03-22 12:54:06.765 HTMF[3376:147526] fontName:’PingFangSC-Thin’
2016-03-22 12:54:06.765 HTMF[3376:147526] fontName:’PingFangSC-Light’
2016-03-22 12:54:06.765 HTMF[3376:147526] fontName:’PingFangSC-Medium’
2016-03-22 12:54:06.765 HTMF[3376:147526] familyName:’Euphemia UCAS’
2016-03-22 12:54:06.765 HTMF[3376:147526] fontName:’EuphemiaUCAS-Italic’
2016-03-22 12:54:06.766 HTMF[3376:147526] fontName:’EuphemiaUCAS’
2016-03-22 12:54:06.766 HTMF[3376:147526] fontName:’EuphemiaUCAS-Bold’
2016-03-22 12:54:06.766 HTMF[3376:147526] familyName:’Telugu Sangam MN’
2016-03-22 12:54:06.766 HTMF[3376:147526] familyName:’Bangla Sangam MN’
2016-03-22 12:54:06.766 HTMF[3376:147526] familyName:’Zapfino’
2016-03-22 12:54:06.766 HTMF[3376:147526] fontName:’Zapfino’
2016-03-22 12:54:06.766 HTMF[3376:147526] familyName:’Bodoni 72 Oldstyle’
2016-03-22 12:54:06.766 HTMF[3376:147526] fontName:’BodoniSvtyTwoOSITCTT-Book’
2016-03-22 12:54:06.767 HTMF[3376:147526] fontName:’BodoniSvtyTwoOSITCTT-Bold’
2016-03-22 12:54:06.767 HTMF[3376:147526] fontName:’BodoniSvtyTwoOSITCTT-BookIt’&lt;/p&gt;</content><category term="iOS" /><summary>UIFont FamilyNames FontNames</summary></entry><entry><title>Markdown Extra Components</title><link href="http://127.0.0.1:4000/markdown-extra-components/" rel="alternate" type="text/html" title="Markdown Extra Components" /><published>2016-02-25T03:00:00+08:00</published><updated>2016-02-25T03:00:00+08:00</updated><id>http://127.0.0.1:4000/markdown-extra-components</id><content type="html" xml:base="http://127.0.0.1:4000/markdown-extra-components/">&lt;h2 id=&quot;summary&quot;&gt;Summary:&lt;/h2&gt;

&lt;p&gt;You can pick as item to see how to apply in markdown.&lt;/p&gt;

&lt;h4 id=&quot;especial-elements&quot;&gt;Especial Elements&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#evidence&quot;&gt;Evidence&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#side-by-side&quot;&gt;Side-by-Side&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#star&quot;&gt;Star&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#especial-breaker&quot;&gt;Especial Breaker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;external-elements&quot;&gt;External Elements&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#gist&quot;&gt;Gist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#codepen&quot;&gt;Codepen&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#slideshare&quot;&gt;Slideshare&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#videos&quot;&gt;Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;evidence&quot;&gt;Evidence&lt;/h2&gt;

&lt;p&gt;You can try the evidence!&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;evidence&quot;&gt;Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.&lt;/span&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;evidence&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;side-by-side&quot;&gt;Side-by-side&lt;/h2&gt;

&lt;p&gt;Like the &lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Image&lt;/strong&gt; on the left and &lt;strong&gt;Text&lt;/strong&gt; on the right:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;side-by-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toleft&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:4000/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alt Text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;figcaption&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;caption&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Photo by John Doe&lt;span class=&quot;nt&quot;&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toright&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;side-by-side&quot;&gt;
    &lt;div class=&quot;toleft&quot;&gt;
        &lt;img class=&quot;image&quot; src=&quot;http://127.0.0.1:4000/&quot; alt=&quot;Alt Text&quot; /&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;Photo by John Doe&lt;/figcaption&gt;
    &lt;/div&gt;

    &lt;div class=&quot;toright&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Text&lt;/strong&gt; on the left and &lt;strong&gt;Image&lt;/strong&gt; on the right:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;side-by-side&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toleft&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;toright&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://127.0.0.1:4000/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Alt Text&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;figcaption&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;caption&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Photo by John Doe&lt;span class=&quot;nt&quot;&gt;&amp;lt;/figcaption&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;side-by-side&quot;&gt;
    &lt;div class=&quot;toleft&quot;&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
    &lt;/div&gt;

    &lt;div class=&quot;toright&quot;&gt;
        &lt;img class=&quot;image&quot; src=&quot;http://127.0.0.1:4000/&quot; alt=&quot;Alt Text&quot; /&gt;
        &lt;figcaption class=&quot;caption&quot;&gt;Photo by John Doe&lt;/figcaption&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;star&quot;&gt;Star&lt;/h2&gt;

&lt;p&gt;You can give evidence to a post. Just add the tag to the markdown file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;star: true&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;especial-breaker&quot;&gt;Especial Breaker&lt;/h2&gt;

&lt;p&gt;You can add a especial &lt;em&gt;hr&lt;/em&gt; to your text.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;breaker&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;breaker&quot;&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;gist&quot;&gt;Gist&lt;/h2&gt;

&lt;p&gt;You can add Gists from github.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;{ % gist sergiokopplin/a344e39fef90e453c22815493475937c % }&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;noscript&gt;&lt;pre&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Example&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;Example&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/sergiokopplin/a344e39fef90e453c22815493475937c.js&quot;&gt; &lt;/script&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;codepen&quot;&gt;Codepen&lt;/h2&gt;

&lt;p&gt;You can add Pens from Codepen.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;268&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-theme-id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-slug-hash=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gfdDu&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-default-tab=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;result&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-user=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;chriscoyier&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;codepen&#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    See the Pen &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;http://codepen.io/chriscoyier/pen/gfdDu/&#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Crappy Recreation of the Book Cover of *The Flame Alphabet*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; by Chris Coyier (&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;http://codepen.io/chriscoyier&#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;@chriscoyier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;) on &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;http://codepen.io&#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;CodePen&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//assets.codepen.io/assets/embed/ei.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p data-height=&quot;268&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;gfdDu&quot; data-default-tab=&quot;result&quot; data-user=&quot;chriscoyier&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/chriscoyier/pen/gfdDu/&quot;&gt;Crappy Recreation of the Book Cover of *The Flame Alphabet*&lt;/a&gt; by Chris Coyier (&lt;a href=&quot;http://codepen.io/chriscoyier&quot;&gt;@chriscoyier&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;slideshare&quot;&gt;Slideshare&lt;/h2&gt;

&lt;p&gt;Add your presentations here!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;//www.slideshare.net/slideshow/embed_code/key/hqDhSJoWkrHe7l&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;560&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;310&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;marginwidth=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;marginheight=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scrolling=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;no&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allowfullscreen&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/hqDhSJoWkrHe7l&quot; width=&quot;560&quot; height=&quot;310&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;videos&quot;&gt;Videos&lt;/h2&gt;

&lt;p&gt;Do you want some videos? Youtube, Vimeo or Vevo? Copy the embed code and paste on your post!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;iframe&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;560&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;310&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.youtube.com/embed/r7XhWUDj-Ts&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;allowfullscreen&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;iframe width=&quot;560&quot; height=&quot;310&quot; src=&quot;https://www.youtube.com/embed/r7XhWUDj-Ts&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content><category term="markdown" /><category term="components" /><category term="extra" /><summary>Summary:</summary></entry><entry><title>Markdown Common Elements</title><link href="http://127.0.0.1:4000/markdown-common-elements/" rel="alternate" type="text/html" title="Markdown Common Elements" /><published>2016-02-25T03:00:00+08:00</published><updated>2016-02-25T03:00:00+08:00</updated><id>http://127.0.0.1:4000/markdown-common-elements</id><content type="html" xml:base="http://127.0.0.1:4000/markdown-common-elements/">&lt;h2 id=&quot;summary&quot;&gt;Summary:&lt;/h2&gt;

&lt;p&gt;You can pick as item to see how to apply in markdown.&lt;/p&gt;

&lt;h3 id=&quot;comum-elements&quot;&gt;Comum Elements&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#basic-formatting&quot;&gt;Basic formatting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#headings&quot;&gt;Headings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lists&quot;&gt;Lists&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#paragraph-modifiers&quot;&gt;Paragraph Modifiers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#urls&quot;&gt;Urls&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#horizontal-rule&quot;&gt;Horizontal Rule&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#images&quot;&gt;Images&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#code&quot;&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;basic-formatting&quot;&gt;Basic formatting&lt;/h2&gt;

&lt;p&gt;This note &lt;strong&gt;demonstrates&lt;/strong&gt; some of what &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; is &lt;em&gt;capable of doing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And that’s how to do it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;This note **demonstrates** some of what [Markdown][some/link] is *capable of doing*.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;/h2&gt;

&lt;p&gt;There are six levels of headings. They correspond with the six levels of HTML headings. You’ve probably noticed them already in the page. Each level down uses one more hash character. But we are using just 4 of them.&lt;/p&gt;

&lt;h1 id=&quot;headings-can-be-small&quot;&gt;Headings can be small&lt;/h1&gt;

&lt;h2 id=&quot;headings-can-be-small-1&quot;&gt;Headings can be small&lt;/h2&gt;

&lt;h3 id=&quot;headings-can-be-small-2&quot;&gt;Headings can be small&lt;/h3&gt;

&lt;h4 id=&quot;headings-can-be-small-3&quot;&gt;Headings can be small&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;# Heading
## Heading
### Heading
#### Heading&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;lists&quot;&gt;Lists&lt;/h2&gt;

&lt;h3 id=&quot;ordered-list&quot;&gt;Ordered list&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;A second item&lt;/li&gt;
  &lt;li&gt;Number 3&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;1. Item 1
2. A second item
3. Number 3&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;unordered-list&quot;&gt;Unordered list&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;An item&lt;/li&gt;
  &lt;li&gt;Another item&lt;/li&gt;
  &lt;li&gt;Yet another item&lt;/li&gt;
  &lt;li&gt;And there’s more…&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;* An item
* Another item
* Yet another item
* And there&#39;s more...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;paragraph-modifiers&quot;&gt;Paragraph modifiers&lt;/h2&gt;

&lt;h3 id=&quot;quote&quot;&gt;Quote&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;&amp;gt; Here is a quote. What this is should be self explanatory.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;urls&quot;&gt;URLs&lt;/h2&gt;

&lt;p&gt;URLs can be made in a handful of ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A named link to &lt;a href=&quot;http://www.markitdown.net/&quot;&gt;Mark It Down&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Another named link to &lt;a href=&quot;http://markitdown.net/&quot;&gt;Mark It Down&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Sometimes you just want a URL like &lt;a href=&quot;http://markitdown.net/&quot;&gt;http://markitdown.net/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;* A named link to [MarkItDown][3].
* Another named link to [MarkItDown](http://markitdown.net/)
* Sometimes you just want a URL like &amp;lt;http://markitdown.net/&amp;gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;horizontal-rule&quot;&gt;Horizontal rule&lt;/h2&gt;

&lt;p&gt;A horizontal rule is a line that goes across the middle of the page.
It’s sometimes handy for breaking things up.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;---&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;

&lt;p&gt;Markdown can also contain images. I’ll need to add something here sometime.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;![Markdowm Image][/image/url]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://kune.fr/wp-content/uploads/2013/10/ghost-blog.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Figure Caption&lt;/em&gt;?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;![Markdowm Image][/image/url]
&amp;lt;figcaption class=&quot;caption&quot;&amp;gt;Photo by John Doe&amp;lt;/figcaption&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://kune.fr/wp-content/uploads/2013/10/ghost-blog.jpg&quot; alt=&quot;Markdowm Image&quot; /&gt;&lt;/p&gt;
&lt;figcaption class=&quot;caption&quot;&gt;Photo by John Doe&lt;/figcaption&gt;

&lt;p&gt;&lt;em&gt;Bigger Images&lt;/em&gt;?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-raw&quot; data-lang=&quot;raw&quot;&gt;![Markdowm Image][/image/url]{: class=&quot;bigger-image&quot; }&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://kune.fr/wp-content/uploads/2013/10/ghost-blog.jpg&quot; alt=&quot;Markdowm Image&quot; class=&quot;bigger-image&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;

&lt;p&gt;A HTML Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Just a test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A CSS Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.8em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;white-space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Monaco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Consolas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Inconsolata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;monospace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A JS Example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Sticky Header&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;900&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;show-menu&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;#hamburguer__open&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeOut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;fast&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;show-menu&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;#hamburguer__open&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeIn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;fast&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><category term="markdown" /><category term="elements" /><summary>Summary:</summary></entry><entry><title>VIM Using Notes</title><link href="http://127.0.0.1:4000/Vim-Using-Notes/" rel="alternate" type="text/html" title="VIM Using Notes" /><published>2016-02-02T03:00:00+08:00</published><updated>2016-02-02T03:00:00+08:00</updated><id>http://127.0.0.1:4000/Vim-Using-Notes</id><content type="html" xml:base="http://127.0.0.1:4000/Vim-Using-Notes/">&lt;h1 id=&quot;vim-using-notes&quot;&gt;VIM Using Notes&lt;/h1&gt;

&lt;h2 id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#First-Level&quot;&gt;First Level&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Second-Level&quot;&gt;Second Level&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Third-Level&quot;&gt;Third Level&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;first-level&quot;&gt;First Level&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; i &lt;/code&gt;	// 按i进入Insert模式&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; ESC &lt;/code&gt;	// 按ESC返回Normal模式&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; x &lt;/code&gt;	// 删除当前光标所在的一个字符&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :wq &lt;/code&gt;	// 保存并退出(:w 保存, :q 退出)(w后面可以跟文件名)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; dd &lt;/code&gt;	// 删除当前行(并把删除的行保存到剪贴板)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; p &lt;/code&gt;	// 粘贴剪贴板&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; hjkl &lt;/code&gt;	// 移动光标，分别为『左』『下』『上』『右』(光标键&lt;code class=&quot;highlighter-rouge&quot;&gt; ← ↓ ↑ → &lt;/code&gt;也可以)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :help &amp;lt;command&amp;gt; &lt;/code&gt;	// 显示相关命令的帮助(退出帮助需要&lt;code class=&quot;highlighter-rouge&quot;&gt; :q &lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;second-level&quot;&gt;Second Level&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;以下命令需要在Normal模式下使用&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;各种插入模式&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; a &lt;/code&gt;	// 在光标后插入&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; o &lt;/code&gt;	// 在当前行后插入一个新行&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; cw &lt;/code&gt;	// 替换从光标所在位置后到一个单词结尾的字符&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;简单的移动光标&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; 0 &lt;/code&gt;	// 移动至行首（数字零）&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; $ &lt;/code&gt;	// 移动至行尾&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;撤销/取消撤销&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; u &lt;/code&gt;	// 撤销，undo&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; ctrl-r &lt;/code&gt;	// 取消撤销，redo&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;打开/保存/退出/改变文件(Buffer)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :e &amp;lt;path/to/file&amp;gt; &lt;/code&gt;	// 打开一个文件&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :w &lt;/code&gt;	// 存盘&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :saveas &amp;lt;path/to/file&amp;gt; &lt;/code&gt;	// 另存为为&amp;lt;path/to/file&amp;gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :wq &lt;/code&gt;	// 保存并退出&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :x &lt;/code&gt;	// 保存并退出，仅在需要时保存&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; ZZ &lt;/code&gt;	// 保存并退出，不需要输入冒号并回车&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :q! &lt;/code&gt;	// 退出不保存&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :qa! &lt;/code&gt;	// 强行退出所有正在编辑的文件（即使有过更改）&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :bn &lt;/code&gt;	// 切换下一个文件&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :bp &lt;/code&gt;	// 切换上一个文件&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; :n &lt;/code&gt;	// 切换下一个文件&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;third-level&quot;&gt;Third Level&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;命令快速重复&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; . &lt;/code&gt;	// (小数点)可以重复上一次命令&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; N&amp;lt;command&amp;gt; &lt;/code&gt;	// 重复某个命令N次&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;光标快速移动&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; NG &lt;/code&gt;	// 快速移动光标至N行（或者使用&lt;code class=&quot;highlighter-rouge&quot;&gt; :N &lt;/code&gt;命令也可以快速移动光标值N行）&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; gg &lt;/code&gt;	// 快速移动光标至第一行&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; G &lt;/code&gt;	// 快速移动光标值最后一行&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; w &lt;/code&gt;	// 到下一个单词的开头（若是大写，则认为以blank字符分割单词）&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; e &lt;/code&gt;	// 到下一个单词的结尾（若是大写，则认为以blank字符分割单词）&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; %: &lt;/code&gt;	// 匹配括号移动，包括(, [, {, (需要先把光标移动至括号上)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; * &lt;/code&gt;	// 匹配光标当前所在的单词，移动光标至下一个匹配单词&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; # &lt;/code&gt;	// 匹配光标当前所在的单词，移动光标至上一个匹配单词&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; ^ &lt;/code&gt;	// 到本行的第一个非blank字符&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; g_ &lt;/code&gt;	// 到本行最后一个不是blanl字符的位置&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; fa &lt;/code&gt;	// 到下一个为&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;的字符处（&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;也可以为其他字符）&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; 3fa &lt;/code&gt;	// 在当前行查找第三个出现的&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; t, &lt;/code&gt;	// 到&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;前的第一个字符（&lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;
也可以为其他字符）&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;F&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt;	// 与&lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt;一样，只不过是相反方向&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Faster&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; &amp;lt;start position&amp;gt;&amp;lt;command&amp;gt;&amp;lt;end position&amp;gt; &lt;/code&gt;&lt;/strong&gt;	// 很多命令可以和移动光标命令联动，比如&lt;code class=&quot;highlighter-rouge&quot;&gt; 0y$ &lt;/code&gt;意味着&lt;code class=&quot;highlighter-rouge&quot;&gt; 0 &lt;/code&gt;先到行首、&lt;code class=&quot;highlighter-rouge&quot;&gt; y &lt;/code&gt;从这里进行拷贝、&lt;code class=&quot;highlighter-rouge&quot;&gt; $ &lt;/code&gt;拷贝到本行最后一个字符&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; v &lt;/code&gt;	// 可视化选择&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; gU &lt;/code&gt;	// 将选择部分变为大写&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; gu &lt;/code&gt;	// 将选择部分变为小写&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; d &lt;/code&gt;	// 删除选择部分
 	- ` dt” `	// 删除所有内容，直到遇到&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt;可以为任意字符&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><category term="VIM" /><summary>VIM Using Notes</summary></entry><entry><title>Swift Learning Notes</title><link href="http://127.0.0.1:4000/Swift-Learning-Notes/" rel="alternate" type="text/html" title="Swift Learning Notes" /><published>2016-01-28T03:00:00+08:00</published><updated>2016-01-28T03:00:00+08:00</updated><id>http://127.0.0.1:4000/Swift-Learning-Notes</id><content type="html" xml:base="http://127.0.0.1:4000/Swift-Learning-Notes/">&lt;h1 id=&quot;swift-learning-notes&quot;&gt;Swift Learning Notes&lt;/h1&gt;

&lt;h2 id=&quot;option&quot;&gt;Option&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;An Optional is just an enum&lt;/strong&gt;&lt;br /&gt;
Conceptually it is like this (the &lt;t&gt; is a generic like as in Array&lt;t&gt;)...&lt;/t&gt;&lt;/t&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;enum Optional&amp;lt;T&amp;gt; {
	case None
	case Some(T)
}
let x:String? = nil
... is ...
let x = Optional&amp;lt;String&amp;gt;.None

let x:String? = &quot;Hello&quot;
... is ...
let x = Optional&amp;lt;String&amp;gt;.Some(&quot;Hello&quot;)

var y = x!
... is ...
switch x{
	case Some(let value): y = value
	case None:	// raise an exception
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;## Array
```
var a = Array&lt;string&gt;()
... is the same as ...
var a = [String]()&lt;/string&gt;&lt;/p&gt;

&lt;p&gt;let animals = [“Giraffe”, “Cow”, “Doggie”, “Bird”]
animals.append(“Ostrich”)	// won’t compile, animals is immutable (because of let)
let animal = animals[5]	// crash (array index out of bounds)&lt;/p&gt;

&lt;p&gt;// enumerating an Array
for animal in animals{
	print(“(animal)”)
}
```&lt;/p&gt;

&lt;h2 id=&quot;dictionary&quot;&gt;Dictionary&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var pac10teamRankings = Dictionary&amp;lt;String, Int&amp;gt;
... is the same as ...
var pac10teamRankings = [String:Int]()

pac10teamRankings = [&quot;Stanford&quot;:1, &quot;Cal&quot;:10]
let ranking = pac10teamRankings[&quot;Ohio State&quot;]	// ranking is an Int? (would be nil)

// use a tuple with for-in to enumerate a Dictionary
for (key, value) in pac10teamRankings{
	print(&quot;\(key) = \(value)&quot;)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;range&quot;&gt;Range&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;A Range in Swift is just two end points of a sensible type&lt;/strong&gt;&lt;br /&gt;
Range is generic (e.g. Range&lt;t&gt;)  
This is sort of a pseudo-representation of Range:&lt;/t&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct Range&amp;lt;T&amp;gt;{
	var startIndex:T
	var endIndex:T
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;An Array’s range would be a Range&lt;int&gt; (since Arrays are indexed by Int)  
Warning: A String subrange is not Range&lt;int&gt; (it is Range&lt;string.index&gt;)&lt;/string.index&gt;&lt;/int&gt;&lt;/int&gt;&lt;/p&gt;

&lt;p&gt;There is special syntax for specifying a Range: either …(inclusive) or ..&amp;lt; (open-ended)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let array = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]
let subArray1 = array[2...3]	// subArray1 will be [&quot;c&quot;, &quot;d&quot;]
let subArray2 = array[2..&amp;lt;3]	// subArray2 will be [&quot;c&quot;]
for i in [27...104]{ }	// Range is enumeratable, like Array, String, Dictionary
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;nsobject&quot;&gt;NSObject&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Base class for all Objective-C classes&lt;/li&gt;
  &lt;li&gt;Some advanced features will require you to subclass from NSObject (and it can’t hurt to do so)&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;The best practice here is to always have your Swift classes inherit from NSObject.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nsnumber&quot;&gt;NSNumber&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Generic number-holding class&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let n = NSNumber(35.5)
let intversion = n.intValue	// also doubleValue, boolValue, etc.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;nsdate&quot;&gt;NSDate&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Used to find out the date and time right now or to store past or future dates.&lt;/li&gt;
  &lt;li&gt;See alse NSCalendar, NSDateFormatter, NSDateComponents&lt;/li&gt;
  &lt;li&gt;If you are displaying a date in your UI, there are localization ramifications, so check these out!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nsdata&quot;&gt;NSData&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;A “bag of bits”.  Used to save/restore/transmit raw data throughout the iOS SDK&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;data-structures-in-swift&quot;&gt;Data Structures in Swift&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Classes, Structures and Enumerations&lt;/strong&gt;&lt;br /&gt;
These are the 3 fundamental building blocks of data structures in Swift&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Similarities&lt;/strong&gt;&lt;br /&gt;
1.Declaration syntax …&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class CalculatorBrain{
	// class
}

struct Vertex{
	// struct
}

enum Op{
	// enum
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.Properties and Functions …&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func doit(argument:Type) -&amp;gt; ReturnValue{

}

var storedProperty = &amp;lt;initial value&amp;gt; (not enum)

var computedProperty:Type{
	get {}
	set {}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;3.Initializers (again, not enum) …&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;init(argument1:Type, argument2:Type, ...){
	
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Differences&lt;/strong&gt;&lt;br /&gt;
1.Inheritance (class only)	// 继承&lt;br /&gt;
2.Introspection and casting (class only)	// 内省 和 转型&lt;br /&gt;
3.Value type (struct, enum) vs. Reference type (class)	// 值类型(拷贝变量) 与 引用类型（传递指针）&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;堆内存中的对象，系统会自动为我们管理内存（ARC）&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;value-vs-reference&quot;&gt;Value vs. Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Value (struct and enum)&lt;/strong&gt;&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;Copied when passed as an argument to a function&lt;/li&gt;
      &lt;li&gt;Copied when assigned to a different variable&lt;/li&gt;
      &lt;li&gt;Immutable if assigned to a variable with let&lt;/li&gt;
      &lt;li&gt;Remember that function parameters are, by default, constants&lt;/li&gt;
      &lt;li&gt;You can put the keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; on an parameter, and it will be mutable, but it’s still a copy&lt;/li&gt;
      &lt;li&gt;You must note any func that can mutate a struct/enum with the keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;mutating&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reference (class)&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;Stored in the heap and reference counted (automatically)&lt;/li&gt;
      &lt;li&gt;Constant pointers to a class(let) still can mutate by calling methods and changing properties&lt;/li&gt;
      &lt;li&gt;When passed as an argument, does not make a copy (just passing a pointer to same instance)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Choosing which to use&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;Usually you will choose class over struct. struct tends to be more for fundamental types.&lt;/li&gt;
      &lt;li&gt;Use of enum is situational (any time you have a type of data with discrete values)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;method&quot;&gt;Method&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Obviously you can override methods/properties in your superclass&lt;/strong&gt;&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;Precede your func or var with the keywork &lt;code class=&quot;highlighter-rouge&quot;&gt;override&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;A method can be marked &lt;code class=&quot;highlighter-rouge&quot;&gt;final&lt;/code&gt; which will prevent subclasses from being able to override&lt;/li&gt;
      &lt;li&gt;Classes can alse be marked final&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Both types and instances can have methods/properties&lt;/strong&gt;&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;For this example, lets consider the struct Double (yes, Double is a struct)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var d:Double = ...
if d.isSignMinus{
	d = Double.abs(d)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;isSignMiuns&lt;/code&gt; is an instance property of a Double (you send it to a particular Double)&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;abs&lt;/code&gt; is a type method of Double (you send it to the type itself, not to a particular Double)&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;Declare a type method or a property by using &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; in front of it：&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;static func ads(d:Double) -&amp;gt; Double
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;In a class you use the word &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; not &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt;, called a class function&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;parameters-names&quot;&gt;Parameters Names&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;All parameters to all functions have an &lt;code class=&quot;highlighter-rouge&quot;&gt;internal name&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;an external name&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;internal name&lt;/code&gt; is the name of the local variable you use inside the method&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;external name&lt;/code&gt; is what callers will use to call the method&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Both with external name and internal name
func foo(external internal: Int){
	let local = internal
}

func bar(){
	let result = foo(external:123)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;You can put &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; if you don’t want callers to use an external name at all for a given parameter	// That is the default for the first argument to a function&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// With under bar thing for enternal name
func foo(_ internal: Int){
	let local = internal
}

func bar(){
	let result = foo(123)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Under bar thing is the default for the first argument
func foo(internal: Int){
	let local = internal
}

func bar(){
	let result = foo(123)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;You can force the first parameter’s external name to be the internal name with &lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Force the first parameter&#39;s external name to be the internal name with `#`
func foo(#internal: Int){
	let local = internal
}

func bar(){
	let result = foo(internal: 123)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;**For other (not the first) parameters, the internal name is, by default, the external name&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func foo(first: Int, second: Double){
	let local = internal
}

func bar(){
	let result = foo(123, second: 5.5)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Any parameter’s external name can be changed&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func foo(first: Int, externalSecond second: Double){
	let local = internal
}

func bar(){
	let result = foo(123, externalSecond: 5.5)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Or even omitted (though this would be sort of “anti-Swift”)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func foo(first: Int, _ second: Double){
	let local = internal
}

func bar(){
	let result = foo(123, 5.5)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;properties&quot;&gt;Properties&lt;/h2&gt;

&lt;h3 id=&quot;property-observers&quot;&gt;Property Observers&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;You can observe changes to any property with &lt;code class=&quot;highlighter-rouge&quot;&gt;willSet&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;didSet&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var someStoredProperty: Int = 42 {
	willSet {newValue is the new Value}
	didSet {oldValue is the old value}
}

override var inheritedProperty {
	willSet {newValue is the new value}
	didSet {oldValue is the old value}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;One very common thing to do in an observer in a Controller is to update the user-interface&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;lazy-initialization&quot;&gt;Lazy Initialization&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;A lazy property does not get initialized until someone accesses it**&lt;/li&gt;
  &lt;li&gt;You can allocate an object, execute a closure, or call a method if you want&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lazy var brain = CalculatorBrain()	// nice if CalclatorBrain used lots of esources

lazy var someProperty: Type = {
	// construct the value of someProperty here
	return &amp;lt;the constructed value&amp;gt;
}()

lazy var myProperty = self.initializeMyProperty()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;This still satisfies the “you must initialize all of your properties” rule&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Unfortunately, things initialized this way can’t be constants (i.e., &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; ok, &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; not okay)&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;Only vars can be lazily initialized&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;If you had constants in your class, those would have to be initializing in your initializer&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;This can be used to get around some initialization dependency conundrums&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;initialization&quot;&gt;Initialization&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;When is an init method needed?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;init methods are not so common because properties can have their defaults set using &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Or properties might be Optionals, in which case they start out &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;You can also initialize a property by executing a closeure&lt;/li&gt;
      &lt;li&gt;Or use lazy instantiation&lt;/li&gt;
      &lt;li&gt;So you only need init when a value can’t be set in any of these ways&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;You also get some “free” init methods&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;If all properties in a base class (no superclass) have defaults, you get &lt;code class=&quot;highlighter-rouge&quot;&gt;init()&lt;/code&gt; for free&lt;/li&gt;
      &lt;li&gt;If a &lt;code class=&quot;highlighter-rouge&quot;&gt;struct&lt;/code&gt; has no initializers, it will get a default one with all properties as arguments&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;```
  struct MyStruct {
      var x: Int = 42
      var y: String = “moltuae”&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  init(x: Int, y: String)	// comes for free   }   ```
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What can you do inside an init?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;You can set any prperty’s value, even those with default values&lt;/li&gt;
      &lt;li&gt;Constant prperties (i.e. properties declared with &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;)can be set&lt;/li&gt;
      &lt;li&gt;You can call other init methods in your own class using &lt;code class=&quot;highlighter-rouge&quot;&gt;self.init(&amp;lt;args&amp;gt;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;In a class, you can of course also call &lt;code class=&quot;highlighter-rouge&quot;&gt;super.init(&amp;lt;args&amp;gt;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;But there are some rules for calling inits from inits in a &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; …&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;What are you required to do inside init?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;By the time any init is done, all properties must have values (optionals can have the value nil)&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;There are two types of inits in a &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;convenience&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;designated&lt;/code&gt; (i.e. not convenience)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;em&gt;Rules for designated init&lt;/em&gt;&lt;/strong&gt;
        &lt;ol&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A designated init must (and can only) call a designated init that is in its immediate superclass&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;You must initialize all properties introduced by your class before calling a superclass&#39;s init&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;You must call a superclass&#39;s init before you assign a value to an inherited property&lt;/code&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;&lt;em&gt;Rules for convenience init&lt;/em&gt;&lt;/strong&gt;
        &lt;ol&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A convenience init must (and can only) call a designated init in its own class&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A convenience init may call a designated init indirectly (through another convenience init)&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A convenience init must call a designated init before it can set any property values&lt;/code&gt;&lt;/li&gt;
        &lt;/ol&gt;

        &lt;p&gt;&lt;strong&gt;The calling of other inits must be complete before you can access properties or invoke methods&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;“What’s the differences between &lt;code class=&quot;highlighter-rouge&quot;&gt;designated init&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;convenience init&lt;/code&gt;”  
&lt;strong&gt;Maybe Answer is:&lt;/strong&gt;“You do not have to provide convenience initializers if your class does not require them. Create convenience initializers whenever a shortcut to a common initialization pattern will save time or make initialization of the class clearer in intent.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Inheriting init&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;If you do not implement any designated inits, you’ll inherit all of your superclass’s designateds&lt;/li&gt;
      &lt;li&gt;If you override all of your superclass’s designated inits, you’ll inherit all it’s convenience inits&lt;/li&gt;
      &lt;li&gt;If you implement no inits, you’ll inherit all of your superclass’s inits&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Required init&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;A class can mark one or more of its init methods as &lt;code class=&quot;highlighter-rouge&quot;&gt;required&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Any subclass must implement said init methods (though they can be inherited per above rules)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Failable init&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;If an init is declared with a ? (or !)after the word init, it returns an &lt;code class=&quot;highlighter-rouge&quot;&gt;Optional&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
  init?(arg1:Type1, ...){
      // might return nil in here
  }
 &lt;/code&gt;
  &lt;em&gt;These are rare.&lt;/em&gt;&lt;br /&gt;
  &lt;em&gt;Note: The documentation does not seem to properly show these inits!&lt;/em&gt;&lt;br /&gt;
  &lt;em&gt;But you’ll be able to tell because the compiler will warn you about the type when you access it&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
  let image = UIImage(named:&quot;foo&quot;)	// image is an Optional UIImage (i.e. UIImage?)
  // Usually we would use if-let for these cases ...
  if let image = UIImage(named:&quot;foo&quot;){
      // image was successfully created
  }else{
      // couldn&#39;t create the image
  }
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Create Objects&lt;/strong&gt;
  Usually you create an object by calling it’s initializer via the type name …&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
  let x = CalculatorBrain()
  let y = ComplicatedObject(arg1: 42, arg2: &quot;hello&quot;, ...)
  let z = [String]()
 &lt;/code&gt;
  But sometimes you create objects by calling type methods in classes …&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;let button = UIButton.buttonWithType(UIButtonType.System)&lt;/code&gt;&lt;br /&gt;
  Or obviously sometimes other objects will create objects for you …&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;let commaSeparatedArrayElements: String = &quot;,&quot;.join(myArray)&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;anyobject&quot;&gt;AnyObject&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Special “Type” (actually it’s a Protocol)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Used primarily for compatibility with existing Objective-C-based APIs&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Where will you see it?&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;As properties (either singularly or as an array of them), e.g. …
  &lt;code class=&quot;highlighter-rouge&quot;&gt;var destinationViewController: AnyObject&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;var toolbarItems: [AnyObject]&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;or as arguments to functions …&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject)&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;func addConstraints(constraints: [AnyObject])&lt;/code&gt;&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;func appendDigit(sender: AnyObject)&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;or even as return types from functions …&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;class func buttonWithType(buttonType: UIButtonType) -&amp;gt; AnyObject&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How do we use AnyObject?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;we don’t usually use it directly&lt;/li&gt;
      &lt;li&gt;Instead, we convert it to anouter, known type&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How do we convert it?&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;We need to create a new variable which is of a known object type (i.e. not AnyObject)&lt;/li&gt;
      &lt;li&gt;Then we assign this new variable to hold the thing that is AnyObject&lt;/li&gt;
      &lt;li&gt;Of course, that new variable has to be of a compatible type&lt;/li&gt;
      &lt;li&gt;If we try to force the AnyObject into something incompatible, crash!&lt;/li&gt;
      &lt;li&gt;But there are ways to check compatibilit y (either before forcing or while forcing)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Casting AnyObject&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;We “force” an AnyObject to be something else by “casting” it using the &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt; keyword …&lt;/p&gt;

        &lt;p&gt;Let’s use &lt;code class=&quot;highlighter-rouge&quot;&gt;var destinationViewController: AnyObject&lt;/code&gt; as an example …&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;let calcVC = destinationViewController as CalculatorViewController&lt;/code&gt;&lt;br /&gt;
  … this would crash if “dvc”” was not, in fact, a CalculatorViewController (or subclass thereof)&lt;/p&gt;

        &lt;p&gt;To protect against a crash, we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;if let&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;as?&lt;/code&gt; …&lt;br /&gt;
  &lt;code class=&quot;highlighter-rouge&quot;&gt;if let calcVC = destinationViewController as? CalculatorViewController { ... }&lt;/code&gt;&lt;br /&gt;
  … &lt;code class=&quot;highlighter-rouge&quot;&gt;as?&lt;/code&gt; returns an &lt;code class=&quot;highlighter-rouge&quot;&gt;Optional&lt;/code&gt; (calcVC = nil if dvc was not a CalculatorViewController)&lt;/p&gt;

        &lt;p&gt;Or we can check before we even try to do as with the &lt;code class=&quot;highlighter-rouge&quot;&gt;is&lt;/code&gt; keyword
  &lt;code class=&quot;highlighter-rouge&quot;&gt;if destinationViewController is CalculatorViewController { ... }&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Casting Arrays of AnyObject&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;If you’re dealing with an [AnyObject], you can cast the elements or the entire array …&lt;/p&gt;

    &lt;p&gt;Let’s use &lt;code class=&quot;highlighter-rouge&quot;&gt;var toolbarItems: [AnyObjects]&lt;/code&gt; as an example&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><category term="iOS" /><category term="Swift" /><summary>Swift Learning Notes</summary></entry><entry><title>Indigo, minimalist jekyll theme</title><link href="http://127.0.0.1:4000/indigo-jekyll-theme/" rel="alternate" type="text/html" title="Indigo, minimalist jekyll theme" /><published>2016-01-24T03:00:00+08:00</published><updated>2016-01-24T03:00:00+08:00</updated><id>http://127.0.0.1:4000/indigo-jekyll-theme</id><content type="html" xml:base="http://127.0.0.1:4000/indigo-jekyll-theme/">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sergiokopplin/indigo/gh-pages/screen-shot.png&quot; alt=&quot;Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Example of project - Indigo Minimalist Jekyll Template - &lt;a href=&quot;http://sergiokopplin.github.io/indigo/&quot;&gt;Demo&lt;/a&gt;. This is a simple and minimalist template for Jekyll for those who likes to eat noodles.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;What has inside?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gulp&lt;/li&gt;
  &lt;li&gt;BrowserSync&lt;/li&gt;
  &lt;li&gt;Stylus&lt;/li&gt;
  &lt;li&gt;SVG&lt;/li&gt;
  &lt;li&gt;Travis&lt;/li&gt;
  &lt;li&gt;No JS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/?url=http%3A%2F%2Fsergiokopplin.github.io%2Findigo%2F&quot;&gt;98/100&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://sergiokopplin.github.io/indigo/&quot;&gt;Check it out&lt;/a&gt; here.
If you need some help, just &lt;a href=&quot;http://github.com/sergiokopplin/indigo/issues&quot;&gt;tell me&lt;/a&gt;.&lt;/p&gt;</content><category term="jekyll" /><summary></summary></entry><entry><title>webRTC Dev Notes</title><link href="http://127.0.0.1:4000/webRTC-Dev-Notes/" rel="alternate" type="text/html" title="webRTC Dev Notes" /><published>2016-01-19T03:00:00+08:00</published><updated>2016-01-19T03:00:00+08:00</updated><id>http://127.0.0.1:4000/webRTC-Dev-Notes</id><content type="html" xml:base="http://127.0.0.1:4000/webRTC-Dev-Notes/">&lt;h1 id=&quot;webrtc-dev-notes&quot;&gt;webRTC Dev Notes&lt;/h1&gt;

&lt;h3 id=&quot;development-environment&quot;&gt;Development Environment&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;An OS X machine is required for iOS development. While it’s possible to develop purely from the command line with text editors, it’s easiest to use Xcode. Both methods will be illustrated here.&lt;/p&gt;

&lt;h3 id=&quot;getting-the-code&quot;&gt;Getting the Code&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;#### Install prerequisite software/depot_tools
1. Fetch depot_tools:&lt;br /&gt;
` $ git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git `&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add depot_tools to your PATH:&lt;br /&gt;
` $ export PATH=&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;/depot_tools:”$PATH” `
    &lt;ul&gt;
      &lt;li&gt;Yes, you want to put depot_tools ahead of everything else, otherwise gcl will refer to the GNU Common Lisp compiler.&lt;/li&gt;
      &lt;li&gt;You may want to add this to your .bashrc file or your shell’s equivalent so that you don’t need to reset your $PATH manually each time you open a new shell.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Xcode 3.0 or higher&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;set-the-target-os-in-your-environment&quot;&gt;Set the target OS in your environment:&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; export GYP_DEFINES=&quot;OS=ios&quot; &lt;/code&gt;
#### Create a working directory, enter it, and run
` fetch –nohooks webrtc_ios `&lt;br /&gt;
` gclient sync `&lt;br /&gt;
This will fetch a regular WebRTC checkout with the iOS-specific parts added. The same checkout can be used for both Mac and iOS development, depending on the OS you set in GYP_DEFINES (see above).&lt;/p&gt;

&lt;h3 id=&quot;compiling-the-code&quot;&gt;Compiling the Code&lt;/h3&gt;
&lt;hr /&gt;</content><category term="webRTC" /><summary>webRTC Dev Notes</summary></entry></feed>
